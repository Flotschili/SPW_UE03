# This is a basic workflow to help you get started with Actions

name: CI_CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  maven_packages_cache: ".m2/repository"
  MAVEN_OPTS: "-Dmaven.repo.local=./$maven_packages_cache"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Maven Build
        run: mvn compile
        
      - uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: "target/*"
          retention-days: 5
          
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Downloading artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          
      - name: Maven Test
        run: mvn test
        
      - uses: actions/upload-artifact@v3
        with:
          name: test-artifact
          path: "target/*"
          retention-days: 5
  
  package:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Downloading artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          
      - name: Maven Package
        run: mvn package
        
      - uses: actions/upload-artifact@v3
        with:
          name: package-artifact
          path: "target/*"
          retention-days: 5

  deploy:
    needs: package
    runs-on: self-hosted
    environment:
      name: 2048-deploy
      url: http://localhost:8080/game2048/
    steps:
      - name: Downloading artifact
        uses: actions/download-artifact@v3
        with:
          name: package-artifact
          
      - name: Deploy
        run: |
          docker rm --force game2048
          docker image rm --force game2048
          echo -e 'FROM tomcat:9-jdk17-openjdk-slim \n COPY ./target/game2048.war /usr/local/tomcat/webapps' | docker build -t game2048 -f- .
          docker run --rm -d --name game2048 -p 8080:8080 game2048
